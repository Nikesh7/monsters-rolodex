{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAI,UACTC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,4BACH,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCOfC,G,MAZS,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEED,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNlBM,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,uBAAOC,KAAK,SACZb,UAAY,SACZW,YAAeA,EACfG,SAAUF,MCiCHG,E,kDAlCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXR,SAAW,GACXS,YAAc,IALL,E,qDASb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAWc,S,oBAI5C,WAAS,IAAD,SAE0BE,KAAKR,MAA9BR,EAFD,EAECA,SAAUS,EAFX,EAEWA,YAEXQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC9CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAElD,OACE,sBAAK3B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWW,YAAc,kBACzBC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WACxD,cAAC,EAAD,CAAUvB,SAAYiB,W,GA9BZO,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.073b1099.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n    return(\r\n        <div className = 'card-container'>\r\n            <img alt='monster' \r\n            src = {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\n    return(\r\n        <div className='card-list'>\r\n        {\r\n          props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster}></Card>\r\n          ))\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => {\r\n    return(\r\n        <input type='search' \r\n        className = 'search'\r\n        placeholder = {placeholder}\r\n        onChange={handleChange}/>\r\n    );\r\n}","import React from 'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends React.Component{\n  \n  constructor(){\n    super();\n\n    this.state = {\n      monsters : [],\n      searchField : ''\n    }\n  }\n  \n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters : users}))\n\n  }\n\n  render(){\n\n    const {monsters, searchField} = this.state;\n\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return(\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox placeholder = 'search monsters'\n        handleChange={e => this.setState({searchField: e.target.value})}/>\n        <CardList monsters = {filteredMonsters} />\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}